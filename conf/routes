# Routes
# This file defines all application routes (Higher priority #routes first)
# ~~~~


# Home page
GET   /                         controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET   /assets/*file                            controllers.Assets.at(path="/public", file)

#pagina de inicio
GET   /principal                                                                                                       controllers.Application.showPrincipalPage

#validacion pagina de perfil de usuario
GET   /perfil/:userId                                                                                                  controllers.Application.showPerfil(userId: Long)

#validacion pagina de albumes de usuario
GET   /albumes/:userId                                                                                                 controllers.Application.showAlbumes(userId: Long)

#validacion pagina de amigos de usuario
GET   /amigos/:userId                                                                                                  controllers.Application.showAmigos(userId: Long)

#validacion pagina de contenido de album
GET   /albumContent/:albumId                                                                                           controllers.Application.showAlbumContent(albumId: Long)

#pagina de perfil de usuario
GET   /perfilPag                                                                                                       controllers.Application.showPerfilPag

#pagina de albumes de usuario
GET   /albumesPag                                                                                                      controllers.Application.showAlbumesPag

#pagina de amigos de usuario
GET   /amigosPag                                                                                                       controllers.Application.showAmigosPag

#pagina de contenido de album
GET   /carrusel                                                                                                controllers.Application.showCarrusel

#crear nuevo album page
GET   /crearAlbum                                                                                                      controllers.Application.createAlbum

#peticion ajax validacion de usuario
GET   /userAutentication/:userEmail/*link/:firstName/:middleName/:lastName/:facebookId                                             controllers.Application.userAutentication(userEmail: String,link: String,firstName: String,middleName: String, lastName: String, facebookId: String)

#peticion ajax actualizacion de usuariosearchForFriendsPage
GET   /userUpdate/:option/*attribute/:userId                                                                           controllers.Application.updateRegisteredUser(option: Int,attribute: String,userId: Long)

#borrar album
GET   /deleteAlbum/:albumId                                                                                            controllers.Application.deleteAlbum(albumId: Long)

#crear nuevo album persistencia
POST   /insertAlbum                 controllers.Application.insertAlbum()

#pagina de registro de usuario. paso 1
GET   /registroPaso1Pag                                                                                                controllers.Application.showRegistroPaso1Pag()

#registro de usuario. paso 2
GET   /registroPaso2/:firstName/:secondName/:firstLastName/:secondLastName/:username/:dia/:mes/:anio/:privacy/*photo/:id   controllers.Application.registroPaso2(firstName: String, secondName: String,firstLastName: String,secondLastName: String, username: String,dia: String,mes: String,anio: String,privacy: Int,photo: String,id: String)

#pagina de registro de usuario. paso 2
GET   /registroPaso2Pag                                                                                                controllers.Application.showRegistroPaso2Pag()

#registro de usuario. paso 3
GET   /addingNewUser/:country/:state/:city/:latitud/:longitud                                                          controllers.Application.addingNewUser(country: String, state: String, city: String,latitud: String, longitud: String)

#buscador de usuarios. 
GET   /searchForFriends/:nameUserPattern                                                                               controllers.Application.searchForFriends(nameUserPattern :String)

#pagina modificacion de ubicacion de usuario. 
GET   /locationModify                                                                                                  controllers.Application.locationModify()

#modificar ubicación de usuario
GET   /modifyUserLocation/:country/:state/:city/:latitud/:longitud                                                     controllers.Application.updateUserLocation(country: String, state: String, city: String,latitud: String, longitud: String)

#pagina de busqueda de amigos. 
GET   /searchForFriendsPage                                                                                            controllers.Application.searchForFriendsPage()

#crear notificacion de solicitud de amistad 
GET   /createFriendshipNotification                                                                                    controllers.Application.createUserFriendRequestNotification()

#crear notificacion de solicitud de amistad 
GET   /getSolicitudesAmistad/:userId                                                                                   controllers.Application.getSolicitudesAmistad(userId: Long)

#confirmacion de amistad 
GET   /confirmFriendship/:userId/:idNotificacion                                                                       controllers.Application.confirmFriendship(userId: Long,idNotificacion: Long)

#busqueda de usuarios por nombre
GET   /userSearch/:namePart                                                                                            controllers.Application.searchFriends(namePart: String)

#pagina buqueda
GET   /searchPage/:namePart                                                                                            controllers.Application.searchPage(namePart: String)

#borrar amistad
GET /deleteFriendship/:userId/:friendId                   controllers.Application.deleteFriendship(userId: Long, friendId: Long)

#validacion pagina de perfil de usuario
GET   /perfilPublic/:userId                                                                                                  controllers.Application.showPerfilPublic(userId: Long)

#pagina de perfil de usuario
GET   /perfilPublicPag                                                                                                       controllers.Application.showPerfilPublicPag

#pagina de contenido de album
GET   /showAlbumContent                                                                                            controllers.Application.showAlbumContentPage()

#Crear nuevo comentario
POST   /nuevoComentario                                                                   controllers.Application.createNewComment()

#Crear nuevo like
POST   /nuevoLike                                                                  controllers.Application.createNewLike()

#Crear nuevo unlike
POST   /nuevoUnlike                                                                  controllers.Application.createNewUnlike()

#borrar comentario
GET   /deleteComment/:commentId                 controllers.Application.deleteComment(commentId: Long) 

#agregar contenido adicional al album
GET  /albumAddContent     controllers.Application.albumAddContent()

#envio de contenido nuevo al album
POST /addContentToAlbum    controllers.Application.addContentToAlbum()

#eliminar contenido del album
GET  /albumDeleteContent     controllers.Application.albumDeleteContent()

#eliminar contenido del album
POST  /deleteContentInAlbum     controllers.Application.deleteContentInAlbum()

#Eliminar un like de album
POST   /deleteLikeAlbum                                                                  controllers.Application.deleteLikeFromAlbum()

#eliminar un unlike de album
POST   /deleteUnlikeAlbum                                                                  controllers.Application.deleteUnlikeFromAlbum()


#Eliminar un like de comentario
POST   /deleteLikeComment                                                                  controllers.Application.deleteLikeFromComment()

#eliminar un unlike de comentario
POST   /deleteUnlikeComment                                                                  controllers.Application.deleteUnlikeFromComment()
